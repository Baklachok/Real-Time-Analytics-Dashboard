version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  backend:
    image: baklachok/analytics_project:latest
    container_name: backend
    ports:
      - '8000:8000'
    env_file: .env
    depends_on:
      - kafka

  celery:
    image: baklachok/analytics_project:latest
    container_name: celery
    command: celery -A analytics_project worker --loglevel=info
    depends_on:
      - backend
      - redis
    env_file: .env
    networks:
      - default

  kafka_consumer:
    image: baklachok/analytics_project:latest
    container_name: kafka_consumer
    command: python manage.py shell -c "from Authentication.kafka_consumer import consume_events; consume_events()"
    env_file: .env
    depends_on:
      - backend
      - kafka
    networks:
      - default

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"

networks:
  default:
    name: my_network
